#!/usr/bin/env node

/**
 * Script seed t√†i kho·∫£n Qu·∫£n tr·ªã vi√™n
 * T·∫°o 1 t√†i kho·∫£n c√≥ role QuanTriVien v·ªõi th√¥ng tin m·∫∑c ƒë·ªãnh
 *
 * C√°ch s·ª≠ d·ª•ng:
 * node scripts/seed-admin.js
 */

require("dotenv").config();
const bcrypt = require("bcryptjs");
const { sequelize } = require("../src/models");
const NhanVien = require("../src/models/NhanVien");
const {
  NHAN_VIEN_TRANG_THAI,
  NHAN_VIEN_VAI_TRO,
} = require("../src/constants/nhanVien");

const seedAdmin = async () => {
  try {
    console.log("üîê Starting admin account seeding...");

    // K·∫øt n·ªëi database
    await sequelize.authenticate();
    console.log("‚úÖ Database connection established.");

    // Sync models (kh√¥ng force ƒë·ªÉ kh√¥ng m·∫•t d·ªØ li·ªáu)
    await sequelize.sync({ alter: true });
    console.log("‚úÖ Database synchronized.");

    // M·∫≠t kh·∫©u m·∫∑c ƒë·ªãnh
    const defaultPassword = "admin123456";
    const hashedPassword = await bcrypt.hash(defaultPassword, 12);

    // Th√¥ng tin t√†i kho·∫£n admin
    const adminAccount = {
      TenDangNhap: "admin",
      MatKhau: hashedPassword,
      HoTen: "Qu·∫£n Tr·ªã Vi√™n",
      Email: "admin@stu.edu.vn",
      SoDienThoai: "0123456789",
      VaiTro: NHAN_VIEN_VAI_TRO.QUAN_TRI_VIEN,
      TrangThai: NHAN_VIEN_TRANG_THAI.HOAT_DONG,
      NguoiTao: "SYSTEM",
      NguoiCapNhat: "SYSTEM",
    };

    // T·∫°o ho·∫∑c c·∫≠p nh·∫≠t t√†i kho·∫£n admin
    const [admin, created] = await NhanVien.findOrCreate({
      where: { TenDangNhap: adminAccount.TenDangNhap },
      defaults: adminAccount,
    });

    if (created) {
      console.log("‚úÖ T·∫°o t√†i kho·∫£n admin th√†nh c√¥ng!");
    } else {
      // C·∫≠p nh·∫≠t th√¥ng tin n·∫øu t√†i kho·∫£n ƒë√£ t·ªìn t·∫°i
      await admin.update({
        MatKhau: hashedPassword,
        HoTen: adminAccount.HoTen,
        Email: adminAccount.Email,
        SoDienThoai: adminAccount.SoDienThoai,
        VaiTro: adminAccount.VaiTro,
        TrangThai: adminAccount.TrangThai,
        NguoiCapNhat: "SYSTEM",
        NgayCapNhat: new Date(),
      });
      console.log("‚úÖ C·∫≠p nh·∫≠t t√†i kho·∫£n admin th√†nh c√¥ng!");
    }

    console.log("\nüéâ HO√ÄN TH√ÄNH!");
    console.log("=====================================");
    console.log("üìã TH√îNG TIN T√ÄI KHO·∫¢N QU·∫¢N TR·ªä VI√äN");
    console.log("=====================================");
    console.log(`üë§ T√™n ƒëƒÉng nh·∫≠p: ${adminAccount.TenDangNhap}`);
    console.log(`üìß Email: ${adminAccount.Email}`);
    console.log(`üîë M·∫≠t kh·∫©u: ${defaultPassword}`);
    console.log(`üëî Vai tr√≤: ${adminAccount.VaiTro}`);
    console.log(`üì± S·ªë ƒëi·ªán tho·∫°i: ${adminAccount.SoDienThoai}`);
    console.log(`‚úÖ Tr·∫°ng th√°i: ${adminAccount.TrangThai}`);
    console.log("=====================================");
    console.log("üìù GHI CH√ö:");
    console.log("‚Ä¢ C√≥ th·ªÉ ƒëƒÉng nh·∫≠p b·∫±ng t√™n ƒëƒÉng nh·∫≠p HO·∫∂C email");
    console.log("‚Ä¢ QuanTriVien c√≥ to√†n quy·ªÅn tr√™n h·ªá th·ªëng");
    console.log("‚Ä¢ H√£y ƒë·ªïi m·∫≠t kh·∫©u sau l·∫ßn ƒëƒÉng nh·∫≠p ƒë·∫ßu ti√™n");
    console.log("=====================================");
  } catch (error) {
    console.error("‚ùå L·ªói khi t·∫°o t√†i kho·∫£n admin:", error);
    console.error("Chi ti·∫øt:", error.message);
    process.exit(1);
  } finally {
    await sequelize.close();
    console.log("\nüîå Database connection closed.");
  }
};

// X·ª≠ l√Ω Ctrl+C
process.on("SIGINT", async () => {
  console.log("\n\n‚ùå ƒê√£ h·ªßy b·ªè thao t√°c");
  await sequelize.close();
  process.exit(0);
});

// Ch·∫°y script
seedAdmin();
